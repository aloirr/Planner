## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://ec2-52-202-22-140.compute-1.amazonaws.com:5432/d16u8q6m9hjjnk?sslmode=require&user=wcrqilsfywsmlb&password=638e961b6131fa13d462743f21d6a4eba30c6736fbc84223a564fcb3d803b294
spring.datasource.username=wcrqilsfywsmlb
spring.datasource.password=638e961b6131fa13d462743f21d6a4eba30c6736fbc84223a564fcb3d803b294

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#
## H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
#
## Datasource
#spring.datasource.url=jdbc:h2:file:/home/aloi/Repositorios/repositorioJava/planner/h2db
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.hibernate.ddl-auto=update

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
## File Storage Properties
spring.servlet.multipart.location=${java.io.tmpdir}

#JSon config
spring.mvc.converters.preferred-json-mapper=jsonb

